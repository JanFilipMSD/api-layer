spring:
  application:
    name: ${apiml.service.serviceId}
apiml:
  enabled: true
  enableUrlEncodedCharacters: false
  service:
    serviceId: enablerv1sampleapp
    title: Service Onboarding Enabler Sample App
    description: Sample Spring Boot REST API Application using the APIML Onboarding
      Enabler for Spring Boot
    scheme: https
    hostname: localhost
    port: 10015
    contextPath: /
    baseUrl: https://localhost:10015
    serviceIpAddress: 127.0.0.1
    homePageRelativeUrl: ${apiml.service.contextPath}/
    statusPageRelativeUrl: ${apiml.service.contextPath}/application/info
    healthCheckRelativeUrl: ${apiml.service.contextPath}/application/health
    discoveryServiceUrls:
      - https://localhost:10011/eureka/
    routes:
      - gatewayUrl: /api/v1
        serviceUrl: ${apiml.service.contextPath}/api/v1
      - gatewayUrl: /api/v2
        serviceUrl: ${apiml.service.contextPath}/v2
    apiInfo:
      - apiId: zowe.apiml.enablerv1sampleapp
        version: 1.0.0
        gatewayUrl: /api/v1
        swaggerUrl: ${apiml.service.scheme}://${apiml.service.hostname}:${apiml.service.port}${apiml.service.contextPath}
        documentationUrl: ${apiml.service.scheme}://${apiml.service.hostname}:${apiml.service.port}${apiml.service.contextPath}/v2/api-docs
      - apiId: zowe.apiml.enablerv1sampleapp
        version: 2.0.0
        gatewayUrl: /api/v2
        swaggerUrl: ${apiml.service.scheme}://${apiml.service.hostname}:${apiml.service.port}${apiml.service.contextPath}
        documentationUrl: ${apiml.service.scheme}://${apiml.service.hostname}:${apiml.service.port}${apiml.service.contextPath}/v2/api-docs
    catalog:
      tile:
        id: cademoapps
        title: Sample API Mediation Layer Applications
        description: Applications which demonstrate how to make a service integrated to
          the API Mediation Layer ecosystem
        version: 1.0.1
    authentication:
      scheme: httpBasicPassTicket
      applid: TSTAPPL
      headers: X-Certificate-Public
    ssl:
      verifySslCertificatesOfServices: true
      protocol: TLSv1.2
      keyAlias: ${server.ssl.keyAlias}
      keyPassword: ${server.ssl.keyPassword}
      keyStore: ${server.ssl.keyStore}
      keyStorePassword: ${server.ssl.keyStorePassword}
      keyStoreType: PKCS12
      trustStore: ${server.ssl.trustStore}
      trustStorePassword: ${server.ssl.trustStorePassword}
      trustStoreType: PKCS12
